//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\wellington\projects\lectures\compiler-from-scratch\lectures\intro-antlr\MyParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyParserParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IMyParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] MyParserParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] MyParserParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] MyParserParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] MyParserParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCode([NotNull] MyParserParser.CodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCode([NotNull] MyParserParser.CodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement([NotNull] MyParserParser.ElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement([NotNull] MyParserParser.ElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput([NotNull] MyParserParser.OutputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput([NotNull] MyParserParser.OutputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.show"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShow([NotNull] MyParserParser.ShowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.show"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShow([NotNull] MyParserParser.ShowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.follow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFollow([NotNull] MyParserParser.FollowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.follow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFollow([NotNull] MyParserParser.FollowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTipo([NotNull] MyParserParser.TipoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTipo([NotNull] MyParserParser.TipoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.equals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquals([NotNull] MyParserParser.EqualsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.equals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquals([NotNull] MyParserParser.EqualsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.cont"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCont([NotNull] MyParserParser.ContContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.cont"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCont([NotNull] MyParserParser.ContContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] MyParserParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] MyParserParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRest([NotNull] MyParserParser.RestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.rest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRest([NotNull] MyParserParser.RestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.fact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFact([NotNull] MyParserParser.FactContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.fact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFact([NotNull] MyParserParser.FactContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.more"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMore([NotNull] MyParserParser.MoreContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.more"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMore([NotNull] MyParserParser.MoreContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] MyParserParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] MyParserParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.uif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUif([NotNull] MyParserParser.UifContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.uif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUif([NotNull] MyParserParser.UifContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] MyParserParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] MyParserParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.comp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp([NotNull] MyParserParser.CompContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.comp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp([NotNull] MyParserParser.CompContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.other"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOther([NotNull] MyParserParser.OtherContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.other"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOther([NotNull] MyParserParser.OtherContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.uelse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUelse([NotNull] MyParserParser.UelseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.uelse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUelse([NotNull] MyParserParser.UelseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.uwhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUwhile([NotNull] MyParserParser.UwhileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.uwhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUwhile([NotNull] MyParserParser.UwhileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.ufor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUfor([NotNull] MyParserParser.UforContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.ufor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUfor([NotNull] MyParserParser.UforContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] MyParserParser.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] MyParserParser.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.incr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncr([NotNull] MyParserParser.IncrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.incr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncr([NotNull] MyParserParser.IncrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] MyParserParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] MyParserParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.par"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPar([NotNull] MyParserParser.ParContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.par"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPar([NotNull] MyParserParser.ParContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.cfunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCfunction([NotNull] MyParserParser.CfunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.cfunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCfunction([NotNull] MyParserParser.CfunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.cpar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCpar([NotNull] MyParserParser.CparContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.cpar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCpar([NotNull] MyParserParser.CparContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] MyParserParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] MyParserParser.InputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] MyParserParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] MyParserParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.umath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUmath([NotNull] MyParserParser.UmathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.umath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUmath([NotNull] MyParserParser.UmathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.mathpar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMathpar([NotNull] MyParserParser.MathparContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.mathpar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMathpar([NotNull] MyParserParser.MathparContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.floor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloor([NotNull] MyParserParser.FloorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.floor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloor([NotNull] MyParserParser.FloorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.ceil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCeil([NotNull] MyParserParser.CeilContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.ceil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCeil([NotNull] MyParserParser.CeilContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.sqrt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqrt([NotNull] MyParserParser.SqrtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.sqrt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqrt([NotNull] MyParserParser.SqrtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.pot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPot([NotNull] MyParserParser.PotContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.pot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPot([NotNull] MyParserParser.PotContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.fmax"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFmax([NotNull] MyParserParser.FmaxContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.fmax"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFmax([NotNull] MyParserParser.FmaxContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.fmin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFmin([NotNull] MyParserParser.FminContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.fmin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFmin([NotNull] MyParserParser.FminContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.rint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRint([NotNull] MyParserParser.RintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.rint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRint([NotNull] MyParserParser.RintContext context);
}
} // namespace Grammar
