//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\wellington\projects\lectures\compiler-from-scratch\lectures\intro-antlr\MyParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMyParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class MyParserBaseListener : IMyParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] MyParserParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] MyParserParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] MyParserParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] MyParserParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] MyParserParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] MyParserParser.CodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] MyParserParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] MyParserParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutput([NotNull] MyParserParser.OutputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.output"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutput([NotNull] MyParserParser.OutputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.show"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShow([NotNull] MyParserParser.ShowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.show"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShow([NotNull] MyParserParser.ShowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.follow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFollow([NotNull] MyParserParser.FollowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.follow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFollow([NotNull] MyParserParser.FollowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTipo([NotNull] MyParserParser.TipoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTipo([NotNull] MyParserParser.TipoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.equals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquals([NotNull] MyParserParser.EqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.equals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquals([NotNull] MyParserParser.EqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.cont"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCont([NotNull] MyParserParser.ContContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.cont"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCont([NotNull] MyParserParser.ContContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] MyParserParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] MyParserParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.rest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRest([NotNull] MyParserParser.RestContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.rest"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRest([NotNull] MyParserParser.RestContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.fact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFact([NotNull] MyParserParser.FactContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.fact"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFact([NotNull] MyParserParser.FactContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.more"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMore([NotNull] MyParserParser.MoreContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.more"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMore([NotNull] MyParserParser.MoreContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] MyParserParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] MyParserParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.uif"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUif([NotNull] MyParserParser.UifContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.uif"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUif([NotNull] MyParserParser.UifContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] MyParserParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] MyParserParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.comp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComp([NotNull] MyParserParser.CompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.comp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComp([NotNull] MyParserParser.CompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.other"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOther([NotNull] MyParserParser.OtherContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.other"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOther([NotNull] MyParserParser.OtherContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.uelse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUelse([NotNull] MyParserParser.UelseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.uelse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUelse([NotNull] MyParserParser.UelseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.uwhile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUwhile([NotNull] MyParserParser.UwhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.uwhile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUwhile([NotNull] MyParserParser.UwhileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.ufor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUfor([NotNull] MyParserParser.UforContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.ufor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUfor([NotNull] MyParserParser.UforContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecl([NotNull] MyParserParser.DeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecl([NotNull] MyParserParser.DeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.incr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncr([NotNull] MyParserParser.IncrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.incr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncr([NotNull] MyParserParser.IncrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] MyParserParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] MyParserParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.par"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPar([NotNull] MyParserParser.ParContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.par"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPar([NotNull] MyParserParser.ParContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.cfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCfunction([NotNull] MyParserParser.CfunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.cfunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCfunction([NotNull] MyParserParser.CfunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.cpar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCpar([NotNull] MyParserParser.CparContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.cpar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCpar([NotNull] MyParserParser.CparContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInput([NotNull] MyParserParser.InputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.input"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInput([NotNull] MyParserParser.InputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] MyParserParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] MyParserParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.umath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUmath([NotNull] MyParserParser.UmathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.umath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUmath([NotNull] MyParserParser.UmathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.mathpar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMathpar([NotNull] MyParserParser.MathparContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.mathpar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMathpar([NotNull] MyParserParser.MathparContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.floor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloor([NotNull] MyParserParser.FloorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.floor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloor([NotNull] MyParserParser.FloorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.ceil"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCeil([NotNull] MyParserParser.CeilContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.ceil"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCeil([NotNull] MyParserParser.CeilContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqrt([NotNull] MyParserParser.SqrtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqrt([NotNull] MyParserParser.SqrtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.pot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPot([NotNull] MyParserParser.PotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.pot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPot([NotNull] MyParserParser.PotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.fmax"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFmax([NotNull] MyParserParser.FmaxContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.fmax"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFmax([NotNull] MyParserParser.FmaxContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.fmin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFmin([NotNull] MyParserParser.FminContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.fmin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFmin([NotNull] MyParserParser.FminContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyParserParser.rint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRint([NotNull] MyParserParser.RintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyParserParser.rint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRint([NotNull] MyParserParser.RintContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Grammar
