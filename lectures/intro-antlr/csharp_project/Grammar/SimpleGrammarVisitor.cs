//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\wellington\projects\lectures\compiler-from-scratch\lectures\intro-antlr\SimpleGrammar.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SimpleGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ISimpleGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleGrammarParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProg([NotNull] SimpleGrammarParser.ProgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleGrammarParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] SimpleGrammarParser.LineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleGrammarParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtrib([NotNull] SimpleGrammarParser.AtribContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleGrammarParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrint([NotNull] SimpleGrammarParser.PrintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] SimpleGrammarParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] SimpleGrammarParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factNum</c>
	/// labeled alternative in <see cref="SimpleGrammarParser.fact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactNum([NotNull] SimpleGrammarParser.FactNumContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factVar</c>
	/// labeled alternative in <see cref="SimpleGrammarParser.fact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactVar([NotNull] SimpleGrammarParser.FactVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factExpr</c>
	/// labeled alternative in <see cref="SimpleGrammarParser.fact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactExpr([NotNull] SimpleGrammarParser.FactExprContext context);
}
} // namespace Grammar
